{
	"info": {
		"_postman_id": "ec7ca250-3b7c-45e4-ad6c-af1ed3e5c043",
		"name": "Automatically create pagoda management monks",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17553996",
		"_collection_link": "https://www.postman.com/mission-observer-66106980/workspace/coder-hub/collection/17553996-ec7ca250-3b7c-45e4-ad6c-af1ed3e5c043?action=share&source=collection_link&creator=17553996"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has token\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    \r",
							"    // Kiểm tra và gán authToken nếu tồn tại\r",
							"    if (jsonData.data && jsonData.data.accessToken) {\r",
							"        pm.environment.set(\"authToken\", jsonData.data.accessToken);\r",
							"    } else {\r",
							"        // Log lỗi nếu không có accessToken trong phản hồi\r",
							"        console.log(\"No accessToken found in response\");\r",
							"    }\r",
							"\r",
							"    // Log the authToken\r",
							"    console.log(\"Token: \" + pm.environment.get(\"authToken\"));\r",
							"\r",
							"    // Kiểm tra xem authToken đã được lưu thành công chưa\r",
							"    pm.expect(pm.environment.get(\"authToken\")).to.be.a('string');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"nm.hien1@tego.global\",\r\n  \"password\": \"Hien@1810\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check the current number of monks managing the pagoda",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check the current number of monks managing the pagoda\", function () {\r",
							"  pm.sendRequest(\r",
							"    {\r",
							"      url: \"http://localhost:3000/api/v1/staffs/staff-of-pagoda/d3bb9186-a014-4882-bdfd-1fce78aa240a\",\r",
							"      method: \"GET\",\r",
							"      header: {\r",
							"        \"Content-Type\": \"application/json\",\r",
							"        Authorization: \"Bearer \" + pm.environment.get(\"authToken\"), // Sử dụng authToken đã lưu\r",
							"      },\r",
							"    },\r",
							"    function (err, res) {\r",
							"      if (err) {\r",
							"        console.error(err);\r",
							"        return;\r",
							"      }\r",
							"\r",
							"      var jsonData = res.json();\r",
							"      console.log(jsonData, \"jsonData\");\r",
							"      // Kiểm tra xem dữ liệu phản hồi có đúng là một mảng không\r",
							"      if (jsonData && jsonData.data) {\r",
							"        // Đặt currentMemberList trong biến môi trường\r",
							"        pm.environment.set(\"currentMonksList\", jsonData.data);\r",
							"\r",
							"        // Log currentMemberList\r",
							"        console.log(\r",
							"          \"Tổng số sư quản lý trước khi chạy chương trình: \",\r",
							"          pm.environment.get(\"currentMonksList\").length\r",
							"        );\r",
							"      } else {\r",
							"        console.error(\"Invalid response format for Monks list\");\r",
							"      }\r",
							"    }\r",
							"  );\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/v1/staffs/staff-of-pagoda/d3bb9186-a014-4882-bdfd-1fce78aa240a",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"staffs",
						"staff-of-pagoda",
						"d3bb9186-a014-4882-bdfd-1fce78aa240a"
					]
				}
			},
			"response": []
		},
		{
			"name": "Automatically create 10 new member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Create 10 monks\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"  if (pm.environment.get(\"authToken\") !== null) {\r",
							"    let monkIds = [];\r",
							"    let currentMonksList = pm.environment.get(\"currentMonksList\") || [];\r",
							"\r",
							"function padStart(i) {\r",
							"    return \"+8491\"+ i.toString().padStart(7, \"0\")\r",
							"}\r",
							"console.log(padStart(1))\r",
							"    for (\r",
							"      let i = currentMonksList.length + 1;\r",
							"      i <= currentMonksList.length + 10;\r",
							"      i++\r",
							"    ) \r",
							"    {\r",
							"        let phoneNumber = padStart(i);\r",
							"        console.log(\"phoneNumber\", phoneNumber)\r",
							"      let monkData = {\r",
							"  \"email\": `nguyenminhPhi${i}@yopmail.com`,\r",
							"  \"name\": `Nguyen Van ${i}`,\r",
							"  \"nickName\": `Thich Van ${i}`,\r",
							"  \"birthDay\": `8/8/1988`,\r",
							"  \"phoneNumber\": phoneNumber,\r",
							"  \"pagodaId\": \"d3bb9186-a014-4882-bdfd-1fce78aa240a\",\r",
							"  \"password\": \"Hien@1810\",\r",
							"  \"role\": \"staff\"\r",
							"  };\r",
							"   \r",
							"      pm.sendRequest(\r",
							"        {\r",
							"          url: \"http://localhost:3000/api/v1/staffs\",\r",
							"          method: \"POST\",\r",
							"          header: {\r",
							"            \"Content-Type\": \"application/json\",\r",
							"            Authorization: `Bearer ${pm.environment.get(\"authToken\")}`,\r",
							"          },\r",
							"          body: {\r",
							"            mode: \"raw\",\r",
							"            raw: JSON.stringify(monkData),\r",
							"          },\r",
							"        },\r",
							"        function (err, res) {\r",
							"          if (err) {\r",
							"            console.error(err);\r",
							"            return;\r",
							"          }\r",
							"\r",
							"          let jsonData = res.json();\r",
							"          console.log(jsonData);\r",
							"          if (jsonData && jsonData.data && jsonData.statusCode === 201 ) {\r",
							"           console.log(`Tạo thành công sư quản lí chùa thứ ${i}`);\r",
							"          } else {\r",
							"            console.error(`Failed to create monk ${i}`);\r",
							"          }\r",
							"        }\r",
							"      );\r",
							"    }\r",
							"  }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/v1/staffs/staff-of-pagoda/d3bb9186-a014-4882-bdfd-1fce78aa240a",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"staffs",
						"staff-of-pagoda",
						"d3bb9186-a014-4882-bdfd-1fce78aa240a"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check the number of Monks after adding 10 Monks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Check the number of Monks after adding 10 Monks\", function () {\r",
							"  pm.sendRequest(\r",
							"    {\r",
							"      url: \"http://localhost:3000/api/v1/staffs/staff-of-pagoda/d3bb9186-a014-4882-bdfd-1fce78aa240a\",\r",
							"      method: \"GET\",\r",
							"      header: {\r",
							"        \"Content-Type\": \"application/json\",\r",
							"        Authorization: \"Bearer \" + pm.environment.get(\"authToken\"),\r",
							"      },\r",
							"    },\r",
							"    function (err, res) {\r",
							"      if (err) {\r",
							"        console.error(err);\r",
							"        return;\r",
							"      }\r",
							" \t\t\tpm.response.to.have.status(200);\r",
							"      console.log(\"Tổng số sư quản lí sau khi thêm tự động\",res.json().data.length);\r",
							"    }\r",
							"  );\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/v1/pagodas",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"v1",
						"pagodas"
					]
				}
			},
			"response": []
		}
	]
}